{
  "address": "0xf430C066a2d45D3EfbB06Fc4EFCe79AbC0D51b95",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferToOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawOnChild",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "WithdrawOnRoot",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawCooldown",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_rootChainManager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rootChainManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawCooldown",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawCooldown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "transferToOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdrawAndTransferToOwner",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawCooldown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_childToken",
          "type": "address"
        }
      ],
      "name": "withdrawOnChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "withdrawOnRoot",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2f22c7371c1b013c65f234c13fd6528b8f458e258e3795058e93868720e8b3b5",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xd125B79B45D82675d9cAc96a6840Be8Bcb4950c2",
    "contractAddress": null,
    "transactionIndex": 50,
    "gasUsed": "1806753",
    "logsBloom": "0x
    "blockHash": "0x29e28fd31416eb400c30f97678da5bc1ef94ba6da123459e053778f8dfce5ca6",
    "transactionHash": "0x2f22c7371c1b013c65f234c13fd6528b8f458e258e3795058e93868720e8b3b5",
    "logs": [
      {
        "transactionIndex": 50,
        "blockNumber": 18132348,
        "transactionHash": "0x2f22c7371c1b013c65f234c13fd6528b8f458e258e3795058e93868720e8b3b5",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000d125b79b45d82675d9cac96a6840be8bcb4950c2",
          "0x00000000000000000000000039f5455840874f4251cf92b14d6dfe10d3cf2234"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000066b3b76c30a000000000000000000000000000000000000000000000000004563918244f400000000000000000000000000000000000000000000000000000499561d9e2aab63000000000000000000000000000000000000000000000000455d2646ce30f600000000000000000000000000000000000000000000000000049fc15914edb563",
        "logIndex": 356,
        "blockHash": "0x29e28fd31416eb400c30f97678da5bc1ef94ba6da123459e053778f8dfce5ca6"
      }
    ],
    "blockNumber": 18132348,
    "cumulativeGasUsed": "16870261",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "538bfa6cc5132d8b49064a6ad70d67bb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferToOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawOnChild\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"WithdrawOnRoot\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawCooldown\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_rootChainManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootChainManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawCooldown\",\"type\":\"uint256\"}],\"name\":\"setWithdrawCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"transferToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawAndTransferToOwner\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_childToken\",\"type\":\"address\"}],\"name\":\"withdrawOnChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"withdrawOnRoot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alex T\",\"details\":\"It needs to be deployed at the same address on both chains. Uses CREATE2 on deploy to achieve that\",\"events\":{\"TransferToOwner(address,address,address,uint256)\":{\"details\":\"Emitted when transferToOwner is called\",\"params\":{\"amount\":\"The amount of tokens that were sent to the child chain\",\"caller\":\"Address that called transferToOwner\",\"owner\":\"Address that the funds have been transferred to\",\"token\":\"Address of the transferred token\"}},\"WithdrawOnChild(address,address,uint256)\":{\"details\":\"Emitted when withdrawOnChild is called\",\"params\":{\"amount\":\"The amount of tokens that were withdrawn\",\"caller\":\"Address that called withdrawOnChild\",\"token\":\"Address of the withdrawn token\"}},\"WithdrawOnRoot(address)\":{\"details\":\"Emitted when withdrawOnRoot is called\",\"params\":{\"caller\":\"Address that called withdrawOnRoot\"}}},\"kind\":\"dev\",\"methods\":{\"initialize(uint256,address)\":{\"details\":\"Needs to be called after deployment. Get addresses from https://github.com/maticnetwork/static/tree/master/network\",\"params\":{\"_rootChainManager\":\"Address of Polygon rootChainManager. Set to zero address on child chain\",\"_withdrawCooldown\":\"Number of blocks needed between withdrawals\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setWithdrawCooldown(uint256)\":{\"details\":\"This limit is set to not spam the withdrawal process with lots of small withdrawals\",\"params\":{\"_withdrawCooldown\":\"Number of blocks needed between withdrawals\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferToOwner(address)\":{\"details\":\"Use this after withdrawOnRoot to transfer what you have exited from Polygon to owner\",\"params\":{\"_token\":\"Address of token to transfer\"}},\"withdrawAndTransferToOwner(bytes,address)\":{\"details\":\"Calls withdrawOnRoot then transferToOwner\",\"params\":{\"_data\":\"Exit payload created with the Matic SDK\",\"_token\":\"Address of token to transfer\"}},\"withdrawOnChild(address)\":{\"details\":\"Emits WithdrawOnChild on succesful withdraw and burn\",\"params\":{\"_childToken\":\"Address of token to withdraw\"}},\"withdrawOnRoot(bytes)\":{\"details\":\"Forwards the exit call to the Polygon rootChainManager\",\"params\":{\"_data\":\"Exit payload created with the Matic SDK\"},\"returns\":{\"_0\":\"Bytes return of the rootChainManager exit call\"}}},\"title\":\"PolygonTokenHarvester\",\"version\":1},\"userdoc\":{\"events\":{\"TransferToOwner(address,address,address,uint256)\":{\"notice\":\"Logs a transfer of tokens to owner\"},\"WithdrawOnChild(address,address,uint256)\":{\"notice\":\"Logs withdrawal being made on the child chain\"},\"WithdrawOnRoot(address)\":{\"notice\":\"Logs a withdrawal being made on the root chain\"}},\"kind\":\"user\",\"methods\":{\"initialize(uint256,address)\":{\"notice\":\"PolygonTokenHarvester initializer\"},\"setWithdrawCooldown(uint256)\":{\"notice\":\"Sets the minimum number of blocks that must pass between withdrawals\"},\"transferToOwner(address)\":{\"notice\":\"Transfers full balance of token to owner\"},\"withdrawAndTransferToOwner(bytes,address)\":{\"notice\":\"Exit funds from polygon and transfer to owner\"},\"withdrawOnChild(address)\":{\"notice\":\"Withdraws full token balance from the child chain\"},\"withdrawOnRoot(bytes)\":{\"notice\":\"Withdraws to itself exited funds from Polygon\"}},\"notice\":\"Assists with moving any given token from the child chain to the root chain. Made for Polygon\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolygonTokenHarvester.sol\":\"PolygonTokenHarvester\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x828a6fb02c79a63dc5867427f355c0a9c65b4359fecadae73883154da550f6f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"contracts/PolygonTokenHarvester.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.5;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./matic/IRootChainManager.sol\\\";\\nimport \\\"./matic/IERC20ChildToken.sol\\\";\\n\\n/// @title PolygonTokenHarvester\\n/// @author Alex T\\n/// @notice Assists with moving any given token from the child chain to the root chain. Made for Polygon\\n/// @dev It needs to be deployed at the same address on both chains. Uses CREATE2 on deploy to achieve that\\ncontract PolygonTokenHarvester is OwnableUpgradeable {\\n    using SafeERC20 for IERC20;\\n\\n    bool private _onRootChain;\\n\\n    address public rootChainManager;\\n    mapping(address => uint256) public lastWithdraw;\\n    uint256 public withdrawCooldown;\\n\\n    /// @notice Logs a transfer of tokens to owner\\n    /// @dev Emitted when transferToOwner is called\\n    /// @param caller Address that called transferToOwner\\n    /// @param owner Address that the funds have been transferred to\\n    /// @param token Address of the transferred token\\n    /// @param amount The amount of tokens that were sent to the child chain\\n    event TransferToOwner(address indexed caller, address indexed owner, address indexed token, uint256 amount);\\n\\n    /// @notice Logs a withdrawal being made on the root chain\\n    /// @dev Emitted when withdrawOnRoot is called\\n    /// @param caller Address that called withdrawOnRoot\\n    event WithdrawOnRoot(address indexed caller);\\n\\n    /// @notice Logs withdrawal being made on the child chain\\n    /// @dev Emitted when withdrawOnChild is called\\n    /// @param caller Address that called withdrawOnChild\\n    /// @param token Address of the withdrawn token\\n    /// @param amount The amount of tokens that were withdrawn\\n    event WithdrawOnChild(address indexed caller, address indexed token, uint256 amount);\\n\\n    /// @notice PolygonTokenHarvester initializer\\n    /// @dev Needs to be called after deployment. Get addresses from https://github.com/maticnetwork/static/tree/master/network\\n    /// @param _withdrawCooldown Number of blocks needed between withdrawals\\n    /// @param _rootChainManager Address of Polygon rootChainManager. Set to zero address on child chain\\n    function initialize(uint256 _withdrawCooldown, address _rootChainManager) public initializer {\\n        __Ownable_init();\\n\\n        if (_rootChainManager != address(0)) {\\n            _onRootChain = true;\\n            rootChainManager = _rootChainManager;\\n        } else {\\n            _onRootChain = false;\\n        }\\n\\n        withdrawCooldown = _withdrawCooldown;\\n     }\\n\\n    /// @notice Allows the call only on the root chain\\n    /// @dev Checks is based on rootChainManager being set\\n    modifier onlyOnRoot {\\n        require(\\n            _onRootChain == true,\\n            \\\"Harvester: should only be called on root chain\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @notice Allows the call only on the child chain\\n    /// @dev Checks is based on rootChainManager being not set\\n    modifier onlyOnChild {\\n        require(\\n            _onRootChain == false,\\n            \\\"Harvester: should only be called on child chain\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @notice Sets the minimum number of blocks that must pass between withdrawals\\n    /// @dev This limit is set to not spam the withdrawal process with lots of small withdrawals\\n    /// @param _withdrawCooldown Number of blocks needed between withdrawals\\n    function setWithdrawCooldown(uint256 _withdrawCooldown) public onlyOwner onlyOnChild {\\n        withdrawCooldown = _withdrawCooldown;\\n    }\\n\\n    // Root Chain Related Functions\\n\\n    /// @notice Withdraws to itself exited funds from Polygon\\n    /// @dev Forwards the exit call to the Polygon rootChainManager\\n    /// @param _data Exit payload created with the Matic SDK\\n    /// @return Bytes return of the rootChainManager exit call\\n    function withdrawOnRoot(bytes memory _data) public onlyOnRoot returns (bytes memory) {\\n        emit WithdrawOnRoot(_msgSender());\\n        (bool success, bytes memory returnData) = rootChainManager.call(_data);\\n        require(success, string(returnData));\\n\\n        return returnData;\\n    }\\n\\n    /// @notice Transfers full balance of token to owner\\n    /// @dev Use this after withdrawOnRoot to transfer what you have exited from Polygon to owner\\n    /// @param _token Address of token to transfer\\n    function transferToOwner(address _token) public onlyOnRoot {\\n        require(_token != address(0), \\\"Harvester: token address must be specified\\\");\\n\\n        IERC20 erc20 = IERC20(_token);\\n\\n        address to = owner();\\n\\n        uint256 amount = erc20.balanceOf(address(this));\\n\\n        emit TransferToOwner(_msgSender(), to, _token, amount);\\n        erc20.safeTransfer(to, amount);\\n    }\\n\\n    /// @notice Exit funds from polygon and transfer to owner\\n    /// @dev Calls withdrawOnRoot then transferToOwner\\n    /// @param _data Exit payload created with the Matic SDK\\n    /// @param _token Address of token to transfer\\n    function withdrawAndTransferToOwner(bytes memory _data, address _token) public onlyOnRoot returns (bytes memory) {\\n        bytes memory returnData =  withdrawOnRoot(_data);\\n        transferToOwner(_token);\\n\\n        return returnData;\\n    }\\n\\n    // Child Chain Related Functions\\n\\n    /// @notice Withdraws full token balance from the child chain\\n    /// @dev Emits WithdrawOnChild on succesful withdraw and burn\\n    /// @param _childToken Address of token to withdraw\\n    function withdrawOnChild(address _childToken) public onlyOnChild {\\n        require(_childToken != address(0), \\\"Harvester: child token address must be specified\\\");\\n\\n        // if cooldown has not passed, we just skip it\\n        if (block.number < lastWithdraw[_childToken] + withdrawCooldown) {\\n            return;\\n        }\\n        lastWithdraw[_childToken] = block.number;\\n\\n        IERC20ChildToken erc20 = IERC20ChildToken(_childToken);\\n\\n        uint256 amount = erc20.balanceOf(address(this));\\n\\n        emit WithdrawOnChild(_msgSender(), _childToken, amount);\\n        erc20.withdraw(amount);\\n    }\\n}\\n\",\"keccak256\":\"0xffad9cd92a62d5b448dd98fa1528102be4ab285007c9ca6e22ce24e447c3f5c3\",\"license\":\"Apache-2.0\"},\"contracts/matic/IERC20ChildToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.5;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20ChildToken is IERC20 {\\n    function deposit(address user, bytes calldata depositData) external;\\n    function withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xc0eacc7566bc994df0fe96466f86a6f6f5fcacbe051e71e6bf260293ca7f169e\",\"license\":\"MIT\"},\"contracts/matic/IRootChainManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.5;\\n\\ninterface IRootChainManager {\\n    function depositEtherFor(address user) external payable;\\n\\n    function depositFor(\\n        address user,\\n        address rootToken,\\n        bytes calldata depositData\\n    ) external;\\n\\n    function exit(bytes calldata inputData) external;\\n}\\n\",\"keccak256\":\"0xe17559a515a5add9c8f43f134c2a0b0a420da092c40e70f79f5652b055ee7266\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611fd5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063812d504d11610071578063812d504d1461018d57806385d3f47e146101a95780638da5cb5b146101c5578063bd07018d146101e3578063da35a26f14610201578063f2fde38b1461021d576100b4565b806316feab75146100b9578063260b1fd9146100e95780633cbfe3a11461011957806344feed2914610137578063624d7b7214610153578063715018a614610183575b600080fd5b6100d360048036038101906100ce9190611554565b610239565b6040516100e091906118c4565b60405180910390f35b61010360048036038101906100fe919061150b565b6102b1565b60405161011091906118c4565b60405180910390f35b610121610432565b60405161012e9190611a48565b60405180910390f35b610151600480360381019061014c91906115b0565b610438565b005b61016d600480360381019061016891906114b1565b610514565b60405161017a9190611a48565b60405180910390f35b61018b61052c565b005b6101a760048036038101906101a291906114b1565b6105b4565b005b6101c360048036038101906101be91906114b1565b6107cc565b005b6101cd610a9e565b6040516101da9190611880565b60405180910390f35b6101eb610ac8565b6040516101f89190611880565b60405180910390f35b61021b6004803603810190610216919061160a565b610aee565b005b610237600480360381019061023291906114b1565b610c89565b005b606060011515606560009054906101000a900460ff16151514610291576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610288906119a8565b60405180910390fd5b600061029c846102b1565b90506102a7836105b4565b8091505092915050565b606060011515606560009054906101000a900460ff16151514610309576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610300906119a8565b60405180910390fd5b610311610d81565b73ffffffffffffffffffffffffffffffffffffffff167fc3ff84400b51b8faa19b096a526771e00f25836296ed44a71bc9d01fd59e4ae360405160405180910390a2600080606560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168460405161039d9190611869565b6000604051808303816000865af19150503d80600081146103da576040519150601f19603f3d011682016040523d82523d6000602084013e6103df565b606091505b5091509150818190610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e91906118e6565b60405180910390fd5b508092505050919050565b60675481565b610440610d81565b73ffffffffffffffffffffffffffffffffffffffff1661045e610a9e565b73ffffffffffffffffffffffffffffffffffffffff16146104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab906119e8565b60405180910390fd5b60001515606560009054906101000a900460ff1615151461050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190611948565b60405180910390fd5b8060678190555050565b60666020528060005260406000206000915090505481565b610534610d81565b73ffffffffffffffffffffffffffffffffffffffff16610552610a9e565b73ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059f906119e8565b60405180910390fd5b6105b26000610d89565b565b60011515606560009054906101000a900460ff1615151461060a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610601906119a8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561067a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067190611988565b60405180910390fd5b60008190506000610689610a9e565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106c69190611880565b60206040518083038186803b1580156106de57600080fd5b505afa1580156106f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071691906115dd565b90508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1661074e610d81565b73ffffffffffffffffffffffffffffffffffffffff167f76a904d36c6485f9a5b321da55bfecf63789bc50598252e91560e3b6175c1c06846040516107939190611a48565b60405180910390a46107c682828573ffffffffffffffffffffffffffffffffffffffff16610e4f9092919063ffffffff16565b50505050565b60001515606560009054906101000a900460ff16151514610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081990611948565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990611908565b60405180910390fd5b606754606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108df9190611afc565b4310156108eb57610a9b565b43606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600081905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161096f9190611880565b60206040518083038186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf91906115dd565b90508273ffffffffffffffffffffffffffffffffffffffff166109e0610d81565b73ffffffffffffffffffffffffffffffffffffffff167f03d1c6e11435f9fdf99686494801bee42b031ab3c47c63abdbca7e22c33f5cbd83604051610a259190611a48565b60405180910390a38173ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b8152600401610a669190611a48565b600060405180830381600087803b158015610a8057600080fd5b505af1158015610a94573d6000803e3d6000fd5b5050505050505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff1680610b14575060008054906101000a900460ff16155b610b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4a906119c8565b60405180910390fd5b60008060019054906101000a900460ff161590508015610ba3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610bab610ed5565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610c40576001606560006101000a81548160ff02191690831515021790555081606560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c5c565b6000606560006101000a81548160ff0219169083151502179055505b826067819055508015610c845760008060016101000a81548160ff0219169083151502179055505b505050565b610c91610d81565b73ffffffffffffffffffffffffffffffffffffffff16610caf610a9e565b73ffffffffffffffffffffffffffffffffffffffff1614610d05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfc906119e8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6c90611928565b60405180910390fd5b610d7e81610d89565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ed08363a9059cbb60e01b8484604051602401610e6e92919061189b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fbe565b505050565b600060019054906101000a900460ff1680610efb575060008054906101000a900460ff16155b610f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f31906119c8565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f8a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610f92611085565b610f9a61115e565b8015610fbb5760008060016101000a81548160ff0219169083151502179055505b50565b6000611020826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112479092919063ffffffff16565b9050600081511115611080578080602001905181019061104091906114de565b61107f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107690611a28565b60405180910390fd5b5b505050565b600060019054906101000a900460ff16806110ab575060008054906101000a900460ff16155b6110ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e1906119c8565b60405180910390fd5b60008060019054906101000a900460ff16159050801561113a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b801561115b5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611184575060008054906101000a900460ff16155b6111c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ba906119c8565b60405180910390fd5b60008060019054906101000a900460ff161590508015611213576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61122361121e610d81565b610d89565b80156112445760008060016101000a81548160ff0219169083151502179055505b50565b6060611256848460008561125f565b90509392505050565b6060824710156112a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129b90611968565b60405180910390fd5b6112ad85611373565b6112ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e390611a08565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516113159190611869565b60006040518083038185875af1925050503d8060008114611352576040519150601f19603f3d011682016040523d82523d6000602084013e611357565b606091505b5091509150611367828286611386565b92505050949350505050565b600080823b905060008111915050919050565b60608315611396578290506113e6565b6000835111156113a95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd91906118e6565b60405180910390fd5b9392505050565b60006114006113fb84611a88565b611a63565b90508281526020810184848401111561141c5761141b611c70565b5b611427848285611b9a565b509392505050565b60008135905061143e81611f5a565b92915050565b60008151905061145381611f71565b92915050565b600082601f83011261146e5761146d611c6b565b5b813561147e8482602086016113ed565b91505092915050565b60008135905061149681611f88565b92915050565b6000815190506114ab81611f88565b92915050565b6000602082840312156114c7576114c6611c7a565b5b60006114d58482850161142f565b91505092915050565b6000602082840312156114f4576114f3611c7a565b5b600061150284828501611444565b91505092915050565b60006020828403121561152157611520611c7a565b5b600082013567ffffffffffffffff81111561153f5761153e611c75565b5b61154b84828501611459565b91505092915050565b6000806040838503121561156b5761156a611c7a565b5b600083013567ffffffffffffffff81111561158957611588611c75565b5b61159585828601611459565b92505060206115a68582860161142f565b9150509250929050565b6000602082840312156115c6576115c5611c7a565b5b60006115d484828501611487565b91505092915050565b6000602082840312156115f3576115f2611c7a565b5b60006116018482850161149c565b91505092915050565b6000806040838503121561162157611620611c7a565b5b600061162f85828601611487565b92505060206116408582860161142f565b9150509250929050565b61165381611b52565b82525050565b600061166482611ab9565b61166e8185611acf565b935061167e818560208601611ba9565b61168781611c7f565b840191505092915050565b600061169d82611ab9565b6116a78185611ae0565b93506116b7818560208601611ba9565b80840191505092915050565b60006116ce82611ac4565b6116d88185611aeb565b93506116e8818560208601611ba9565b6116f181611c7f565b840191505092915050565b6000611709603083611aeb565b915061171482611c90565b604082019050919050565b600061172c602683611aeb565b915061173782611cdf565b604082019050919050565b600061174f602f83611aeb565b915061175a82611d2e565b604082019050919050565b6000611772602683611aeb565b915061177d82611d7d565b604082019050919050565b6000611795602a83611aeb565b91506117a082611dcc565b604082019050919050565b60006117b8602e83611aeb565b91506117c382611e1b565b604082019050919050565b60006117db602e83611aeb565b91506117e682611e6a565b604082019050919050565b60006117fe602083611aeb565b915061180982611eb9565b602082019050919050565b6000611821601d83611aeb565b915061182c82611ee2565b602082019050919050565b6000611844602a83611aeb565b915061184f82611f0b565b604082019050919050565b61186381611b90565b82525050565b60006118758284611692565b915081905092915050565b6000602082019050611895600083018461164a565b92915050565b60006040820190506118b0600083018561164a565b6118bd602083018461185a565b9392505050565b600060208201905081810360008301526118de8184611659565b905092915050565b6000602082019050818103600083015261190081846116c3565b905092915050565b60006020820190508181036000830152611921816116fc565b9050919050565b600060208201905081810360008301526119418161171f565b9050919050565b6000602082019050818103600083015261196181611742565b9050919050565b6000602082019050818103600083015261198181611765565b9050919050565b600060208201905081810360008301526119a181611788565b9050919050565b600060208201905081810360008301526119c1816117ab565b9050919050565b600060208201905081810360008301526119e1816117ce565b9050919050565b60006020820190508181036000830152611a01816117f1565b9050919050565b60006020820190508181036000830152611a2181611814565b9050919050565b60006020820190508181036000830152611a4181611837565b9050919050565b6000602082019050611a5d600083018461185a565b92915050565b6000611a6d611a7e565b9050611a798282611bdc565b919050565b6000604051905090565b600067ffffffffffffffff821115611aa357611aa2611c3c565b5b611aac82611c7f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611b0782611b90565b9150611b1283611b90565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b4757611b46611c0d565b5b828201905092915050565b6000611b5d82611b70565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611bc7578082015181840152602081019050611bac565b83811115611bd6576000848401525b50505050565b611be582611c7f565b810181811067ffffffffffffffff82111715611c0457611c03611c3c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4861727665737465723a206368696c6420746f6b656e2061646472657373206d60008201527f7573742062652073706563696669656400000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4861727665737465723a2073686f756c64206f6e6c792062652063616c6c656460008201527f206f6e206368696c6420636861696e0000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4861727665737465723a20746f6b656e2061646472657373206d75737420626560008201527f2073706563696669656400000000000000000000000000000000000000000000602082015250565b7f4861727665737465723a2073686f756c64206f6e6c792062652063616c6c656460008201527f206f6e20726f6f7420636861696e000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b611f6381611b52565b8114611f6e57600080fd5b50565b611f7a81611b64565b8114611f8557600080fd5b50565b611f9181611b90565b8114611f9c57600080fd5b5056fea26469706673582212207ee359a55625009b15a8d6a9e5b2a9cc07101c6f2a7e232d204a04b5e6ac9f2564736f6c63430008060033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Alex T",
    "details": "It needs to be deployed at the same address on both chains. Uses CREATE2 on deploy to achieve that",
    "events": {
      "TransferToOwner(address,address,address,uint256)": {
        "details": "Emitted when transferToOwner is called",
        "params": {
          "amount": "The amount of tokens that were sent to the child chain",
          "caller": "Address that called transferToOwner",
          "owner": "Address that the funds have been transferred to",
          "token": "Address of the transferred token"
        }
      },
      "WithdrawOnChild(address,address,uint256)": {
        "details": "Emitted when withdrawOnChild is called",
        "params": {
          "amount": "The amount of tokens that were withdrawn",
          "caller": "Address that called withdrawOnChild",
          "token": "Address of the withdrawn token"
        }
      },
      "WithdrawOnRoot(address)": {
        "details": "Emitted when withdrawOnRoot is called",
        "params": {
          "caller": "Address that called withdrawOnRoot"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "initialize(uint256,address)": {
        "details": "Needs to be called after deployment. Get addresses from https://github.com/maticnetwork/static/tree/master/network",
        "params": {
          "_rootChainManager": "Address of Polygon rootChainManager. Set to zero address on child chain",
          "_withdrawCooldown": "Number of blocks needed between withdrawals"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setWithdrawCooldown(uint256)": {
        "details": "This limit is set to not spam the withdrawal process with lots of small withdrawals",
        "params": {
          "_withdrawCooldown": "Number of blocks needed between withdrawals"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferToOwner(address)": {
        "details": "Use this after withdrawOnRoot to transfer what you have exited from Polygon to owner",
        "params": {
          "_token": "Address of token to transfer"
        }
      },
      "withdrawAndTransferToOwner(bytes,address)": {
        "details": "Calls withdrawOnRoot then transferToOwner",
        "params": {
          "_data": "Exit payload created with the Matic SDK",
          "_token": "Address of token to transfer"
        }
      },
      "withdrawOnChild(address)": {
        "details": "Emits WithdrawOnChild on succesful withdraw and burn",
        "params": {
          "_childToken": "Address of token to withdraw"
        }
      },
      "withdrawOnRoot(bytes)": {
        "details": "Forwards the exit call to the Polygon rootChainManager",
        "params": {
          "_data": "Exit payload created with the Matic SDK"
        },
        "returns": {
          "_0": "Bytes return of the rootChainManager exit call"
        }
      }
    },
    "title": "PolygonTokenHarvester",
    "version": 1
  },
  "userdoc": {
    "events": {
      "TransferToOwner(address,address,address,uint256)": {
        "notice": "Logs a transfer of tokens to owner"
      },
      "WithdrawOnChild(address,address,uint256)": {
        "notice": "Logs withdrawal being made on the child chain"
      },
      "WithdrawOnRoot(address)": {
        "notice": "Logs a withdrawal being made on the root chain"
      }
    },
    "kind": "user",
    "methods": {
      "initialize(uint256,address)": {
        "notice": "PolygonTokenHarvester initializer"
      },
      "setWithdrawCooldown(uint256)": {
        "notice": "Sets the minimum number of blocks that must pass between withdrawals"
      },
      "transferToOwner(address)": {
        "notice": "Transfers full balance of token to owner"
      },
      "withdrawAndTransferToOwner(bytes,address)": {
        "notice": "Exit funds from polygon and transfer to owner"
      },
      "withdrawOnChild(address)": {
        "notice": "Withdraws full token balance from the child chain"
      },
      "withdrawOnRoot(bytes)": {
        "notice": "Withdraws to itself exited funds from Polygon"
      }
    },
    "notice": "Assists with moving any given token from the child chain to the root chain. Made for Polygon",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 130,
        "contract": "contracts/PolygonTokenHarvester.sol:PolygonTokenHarvester",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 133,
        "contract": "contracts/PolygonTokenHarvester.sol:PolygonTokenHarvester",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 212,
        "contract": "contracts/PolygonTokenHarvester.sol:PolygonTokenHarvester",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/PolygonTokenHarvester.sol:PolygonTokenHarvester",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/PolygonTokenHarvester.sol:PolygonTokenHarvester",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 827,
        "contract": "contracts/PolygonTokenHarvester.sol:PolygonTokenHarvester",
        "label": "_onRootChain",
        "offset": 0,
        "slot": "101",
        "type": "t_bool"
      },
      {
        "astId": 829,
        "contract": "contracts/PolygonTokenHarvester.sol:PolygonTokenHarvester",
        "label": "rootChainManager",
        "offset": 1,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 833,
        "contract": "contracts/PolygonTokenHarvester.sol:PolygonTokenHarvester",
        "label": "lastWithdraw",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 835,
        "contract": "contracts/PolygonTokenHarvester.sol:PolygonTokenHarvester",
        "label": "withdrawCooldown",
        "offset": 0,
        "slot": "103",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}